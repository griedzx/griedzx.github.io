[{"categories":["处理和分析高通量测序数据"],"content":"文件格式 BED (Browser Extensible Data),一种灵活的储存数据的格式，主要用来 储存基因组特征 （genomic features） 或注释信息 。 BED格式可用于UCSC的Genome Browser可视化工具中 挖掘生物数据信息时，我们会将未知的序列与已知的reference对比，从而找到未知序列中隐藏的信息。这就是序列比对。常见的序列比对的文件输出格式为sam和bam Sequence Alignment Mapping (SAM) 格式包括两部分：1. 注释信息（header section）2. 比对结果（alignment section） Binary Alignment/Map (BAM)是SAM格式的二进制压缩格式，这两种格式是序列比对时软件常用的数据格式 sam/bam格式文件，就是把测序reads比对到参考基因组后的文件 bam或者bed格式的文件主要是为了追踪我们的reads到底比对到了参加基因组的什么区域 ","date":"2023-09-12","objectID":"/deeptools_peaks%E5%8F%AF%E8%A7%86%E5%8C%96/:1:0","tags":["deeptools"],"title":"deeptools_peaks可视化","uri":"/deeptools_peaks%E5%8F%AF%E8%A7%86%E5%8C%96/"},{"categories":["处理和分析高通量测序数据"],"content":"deeptools功能 deeptools模块流程图 ","date":"2023-09-12","objectID":"/deeptools_peaks%E5%8F%AF%E8%A7%86%E5%8C%96/:2:0","tags":["deeptools"],"title":"deeptools_peaks可视化","uri":"/deeptools_peaks%E5%8F%AF%E8%A7%86%E5%8C%96/"},{"categories":["处理和分析高通量测序数据"],"content":"Deeptools 对 ChIP-seq 数据进行图形呈现 ","date":"2023-09-12","objectID":"/deeptools_peaks%E5%8F%AF%E8%A7%86%E5%8C%96/:3:0","tags":["deeptools"],"title":"deeptools_peaks可视化","uri":"/deeptools_peaks%E5%8F%AF%E8%A7%86%E5%8C%96/"},{"categories":["处理和分析高通量测序数据"],"content":"bam文件转换成bw文件格式 将bam文件转换为bigwig文件，这是一种压缩的二进制格式，可以快速加载和显示 bamCoverage -b \u003cbw\u003e ","date":"2023-09-12","objectID":"/deeptools_peaks%E5%8F%AF%E8%A7%86%E5%8C%96/:3:1","tags":["deeptools"],"title":"deeptools_peaks可视化","uri":"/deeptools_peaks%E5%8F%AF%E8%A7%86%E5%8C%96/"},{"categories":["处理和分析高通量测序数据"],"content":"参考 [生信资料 3] 生物信息学常见数据格式，汇总！ - 知乎 (zhihu.com) deepTools 使用指南 - 台部落 (twblogs.net) [软件使用05] 快速使用 Deeptools 对 ChIP-seq 数据画图！ - 知乎 (zhihu.com) ATAC-seq-TSS富集图-deeptools-学习笔记 - 知乎 (zhihu.com) ","date":"2023-09-12","objectID":"/deeptools_peaks%E5%8F%AF%E8%A7%86%E5%8C%96/:4:0","tags":["deeptools"],"title":"deeptools_peaks可视化","uri":"/deeptools_peaks%E5%8F%AF%E8%A7%86%E5%8C%96/"},{"categories":["GSEA"],"content":"GSEA的结果图 GSEA的结果图通常包含三个部分 ","date":"2023-09-09","objectID":"/gsea_results/:1:0","tags":["ES折线图","信噪比"],"title":"GSEA结果理解","uri":"/gsea_results/"},{"categories":["GSEA"],"content":"富集分数（Enrichment Score）的折线图 横轴代表排序后的基因，纵轴为对应的Running ES。在折线图中出现的峰值就是这个基因集的富集分数（Enrichment Score，ES）。ES是从排序后的表达基因集的第一个基因开始，如果排序表达基因集中的基因出现在功能基因数据集中则加分，反之则减分。正值说明在顶部富集，峰值左边的基因为核心基因，负值则相反。 富集分数（ES） ES计算公式 正值ES表示基因 在功能注释基因集的顶部富集，负值ES表示基因 在功能注释基因集的底部富集。 ","date":"2023-09-09","objectID":"/gsea_results/:1:1","tags":["ES折线图","信噪比"],"title":"GSEA结果理解","uri":"/gsea_results/"},{"categories":["GSEA"],"content":"基因位置图 黑线代表排序后表达数据集中的基因存处于当前分析的功能注释基因集的位置 红蓝相间的热图是表达丰度排列，红色越深的表示该位置的基因logFC越大，蓝色越深表示logFC越小。如果研究的功能注释基因集的成员显著聚集在表达数据集的顶部或底部，则说明功能基因数据集中的基因在数据集中高表达或低表达，若随机分配，则说明表达数据集与该通路无关。 ","date":"2023-09-09","objectID":"/gsea_results/:1:2","tags":["ES折线图","信噪比"],"title":"GSEA结果理解","uri":"/gsea_results/"},{"categories":["GSEA"],"content":"信噪比（Signal2Noise） 每个基因对应的信噪比以灰色面积图显示。灰色阴影的面积比，可以从整体上反映组间的Signal2Noise的大小。 在GSEA（基因集富集分析）中，信噪比（Signal-to-Noise Ratio）是一种度量方法，用于对基因进行排序。这种排序方法是根据基因在两种样品中的差异表达程度或者表型相关度进行排序 具体来说，信噪比的计算方法如下： 首先，对所有基因按照它们在两种样品中的差异表达程度（如logFC）或者表型相关度进行排序。 然后，对于每一个基因，计算它在样品A中的平均表达量和样品B中的平均表达量的差值。这个差值就是该基因的信噪比。 在GSEA的结果展示图中，每个基因对应的信噪比以灰色面积图显示。灰色阴影的面积比，可以从整体上反映组间的Signal2Noise的大小。 GSEA图 在上图中，我们一般关注ES值，峰出现在排序基因集的前端还是后端（ES值大于0在前端，小于0在后端）以及 Leading edge subset（即对富集贡献最大的部分，领头亚集）；在ES图中出现领头亚集的形状，表明这个功能基因集在某处理条件下具有更显著的生物学意义。 ","date":"2023-09-09","objectID":"/gsea_results/:1:3","tags":["ES折线图","信噪比"],"title":"GSEA结果理解","uri":"/gsea_results/"},{"categories":["GSEA"],"content":"GSEA计算中几个关键概念 NES ：校正后的归一化的ES值 由于不同用户输入的基因数据库文件中的基因集数目可能不同，富集评分的标准化考虑了基因集个数和大小，其绝对值大于 1为一条富集标准。 FDR q-val：是多重假设检验校正之后的 p-value 即对 NES可能存在的假阳性结果的概率估计（多重假设检验校正 ：首先对每个基因子集 计算得到的ES根据基因集的大小进行标准化得到Normalized Enrichment Score (NES)。随后针对NES计算假阳性率） LEADING EDGE： 该处有3个统计值，tags=**%表示核心基因占该基因集中基因总数的百分比；list=**%表示核心基因占所有基因的百分比；signal=**%，将前两项统计数据结合在一起计算出的富集信号强度，计算公式如下： signal计算公式 核心基因：leading edge subset 指在该基因集中，对于富集结果的贡献最大的基因。 GSEA 对显著性的定义为 p-value\u003c5%，FDR q-val\u003c25% ","date":"2023-09-09","objectID":"/gsea_results/:1:4","tags":["ES折线图","信噪比"],"title":"GSEA结果理解","uri":"/gsea_results/"},{"categories":["GSEA"],"content":"参考 GSEA第2弹！如何解读GSEA富集结果 - 知乎 (zhihu.com) 史上最全GSEA可视化教程，今天让你彻底搞懂GSEA！ - 知乎 (zhihu.com) 一文掌握GSEA，超详细教程！ - 知乎 (zhihu.com) ","date":"2023-09-09","objectID":"/gsea_results/:2:0","tags":["ES折线图","信噪比"],"title":"GSEA结果理解","uri":"/gsea_results/"},{"categories":["GSEA"],"content":"GESA富集分析可以使用 java 版本的 GSEA软件进行富集。但是这个软件有一个问题就是自带的物种数据库有限（主要是人、小鼠的 PMT 文件、且不支持 KEGG 库），如果想要分析一些其他物种，需要上传自己准备的 PMT 文件。 这时候有一个可选的方案就是用 clusterProfiler包进行 GSEA 富集分析，该软件提供了两种方式进行富集： gseGO、gseKEGG等函数分别从 OrgDb、KEGG 官网读取或者下载 PMT 基因集 GSEA函数，一个通用的 GSEA 富集框架，支持从本地读取自己已经准备好的 PMT 基因集 ","date":"2023-08-29","objectID":"/clusterprofiler_gesa/:0:0","tags":["clusterProfiler","GESA"],"title":"clusterProfiler包GSEA富集","uri":"/clusterprofiler_gesa/"},{"categories":["GSEA"],"content":"gseGO gseGO( geneList, ont = \"BP\", OrgDb, keyType = \"ENTREZID\", exponent = 1, minGSSize = 10, maxGSSize = 500, eps = 1e-10, pvalueCutoff = 0.05, pAdjustMethod = \"BH\", verbose = TRUE, seed = FALSE, by = \"fgsea\", ... ) geneList order ranked geneList 根据 logFC(log2folderchange)列进行 降序排列（上调基因在顶部，下调在底部），制作 gene_list集(logFC对应元素名为对应基因id): GSEA_input \u003c- info_merge$Log2FoldChange names(GSEA_input) = info_merge$ENTREZID geneList \u003c- sort(GSEA_input, decreasing = TRUE) gseGO:GO 本体富集，可以进行GO本体的GSEA富集 gsea_go \u003c- gseGO( gene_list, # 根据logFC排序的基因集 ont = \"BP\", # 可选\"BP\"、\"MF\"、\"CC\"三大类或\"ALL\" OrgDb = maize, #orgdb数据库 keyType = \"ENTREZID\", # 基因id类型 pvalueCutoff = 0.05, pAdjustMethod = \"BH\", # p值校正方法 ) 查看分析结果数据和对应列名 head(gsea_go,2) ID ：GO term 或 KEGG 通路 Description ：GO term 描述信息 setSize ：富集到该 term 的基因个数 enrichmentScore ：富集分数，也就是 ES NES ：标准化以后的 ES，全称 normalized enrichment score pvalue：富集的 P 值 p.adjust ：校正后的 P 值 qvalues ：FDR （false discovery rate）错误发现率 rank ：当 ES 最大时，对应基因所在排序好的基因列表中所处的位置 leading_edge：tags 表示核心基因占该通路基因集的百分比；list 表示核心基因占所有基因的百分比；signal，将前 2 项统计值结合在一起计算出的富集信号强度 core_enrichment：核心或者 leading 基因列表。 ","date":"2023-08-29","objectID":"/clusterprofiler_gesa/:1:0","tags":["clusterProfiler","GESA"],"title":"clusterProfiler包GSEA富集","uri":"/clusterprofiler_gesa/"},{"categories":["GSEA"],"content":"上、下调的 GO term 分开展示： dotplot( gsea_go, showCategory=10, split=\".sign\") + facet_grid(.~.sign) ","date":"2023-08-29","objectID":"/clusterprofiler_gesa/:1:1","tags":["clusterProfiler","GESA"],"title":"clusterProfiler包GSEA富集","uri":"/clusterprofiler_gesa/"},{"categories":["“GSEA\""],"content":"基因集富集分析 GSEA 传统KEGG（通路富集分析）和GO（功能富集）分析时，如果富集到的同一通路下，既有上调差异基因，也有下调差异基因，那么这条通路总体的表现形式究竟是怎样？是被抑制还是激活？或者更直观点说，这条通路下的基因表达水平在实验处理后是上升了呢，还是下降了呢? 传统的富集分析，针对总体的差异基因，不区分哪些差异基因是上调还是下调。 上调基因是指在实验组中相对于对照组表达量上升的基因，下调基因是指在实验组中相对于对照组表达量下降的基因。这些基因的变化可能会对生物体的生理和病理状态产生影响。 举个例子，有100个人（差异基因）去参加选秀节目，这里边有唱歌好的，有跳舞好的，有作词好的（各种背景），接着我们按照100个人的身高排序后发现，身高较低的选手大部分被分到了舞蹈组，因此我们获得这样一个结论，身高较低的选手跳舞身体协调性更好！这样，应用到我们的基因功能分析上，就像下图，假如按照差异表达倍数从正到负排序后（Gene set S），我们参与某条通路的差异基因密集排列在排序表顶端（Leading edge subset），及显著上调，因此我们认为这条通路下的基因表达水平在实验处理后是显著上调，可能被激活。 ","date":"2023-08-24","objectID":"/gesa/:0:0","tags":["定义","初体验"],"title":"GSEA简介","uri":"/gesa/"},{"categories":["“GSEA\""],"content":"参考 一文掌握GSEA，超详细教程！ - 知乎 (zhihu.com) 一分钟了解GSEA - 知乎 (zhihu.com) ","date":"2023-08-24","objectID":"/gesa/:1:0","tags":["定义","初体验"],"title":"GSEA简介","uri":"/gesa/"},{"categories":["GWAS"],"content":"GWAS的数据处理和质量控制：学习如何对基因型数据进行格式转换、质量过滤、正负链翻转、基因型填补等操作，以及如何评估数据质量和避免潜在的偏差","date":"2023-08-05","objectID":"/gwas_turtorial/","tags":["数据处理","质量控制"],"title":"Gwas_turtorial","uri":"/gwas_turtorial/"},{"categories":["GWAS"],"content":"GWAS主要步骤 选择一个感兴趣的性状或疾病，以及一个适当的样本群体，如病例和对照组，或者具有连续性状值的个体。 对样本进行全基因组分型，即测定数百万个SNP位点的基因型。 对每个SNP位点进行关联分析，即计算其与性状或疾病的相关性强度和显著性水平，通常使用回归模型或卡方检验等统计方法。 根据设定的显著性阈值，筛选出具有显著关联信号的SNP位点，并绘制曼哈顿图（manhattan plot）来展示全基因组关联结果。 对显著关联信号进行进一步的验证和解释，如进行基因型插补（genotype imputation），精细定位（fine-mapping），功能注释（functional annotation），共定位分析（colocalization analysis）等，以确定最可能的因果变异和相关基因。 ","date":"2023-08-05","objectID":"/gwas_turtorial/:1:0","tags":["数据处理","质量控制"],"title":"Gwas_turtorial","uri":"/gwas_turtorial/"},{"categories":["GWAS"],"content":"GWAS分析基本流程及分析思路 GWAS分析基本流程及分析思路 (qq.com) ","date":"2023-08-05","objectID":"/gwas_turtorial/:2:0","tags":["数据处理","质量控制"],"title":"Gwas_turtorial","uri":"/gwas_turtorial/"},{"categories":["GWAS"],"content":"GWAS的数据QC qc,(quality control)质量控制，比起表观学研究，GWAS研究很少有引起偏差的来源，一般来说，一个人的基因型终其一生几乎不会改变的，因此很少存在同时影响表型又影响基因型的变异。但即便这样，我们在做GWAS时也要去除一些可能引起偏差的因素。 这种因素主要有：群体结构、个体间存在血缘关系、技术性操作。 ","date":"2023-08-05","objectID":"/gwas_turtorial/:3:0","tags":["数据处理","质量控制"],"title":"Gwas_turtorial","uri":"/gwas_turtorial/"},{"categories":["GWAS"],"content":"怎么进行质量控制（PLINK） 质量控制包括两个方向，一个是样本的质量控制，一个是SNP的质量控制 必须先进行SNP过滤，才能进行个体过滤 ??? PLINK 对于PLINK来说，它既可以处理文本格式的文件，也可以处理二进制格式的文件。但是大文本的文件处理起来十分消耗计算资源，所以我们一般 推使用二进制格式的输入文件 。 文本格式的PLINK数据包括两份文件 .ped文件 和 .map文件 ped文件 包含个体信息（例如个体标识符ID，性别等等）以及他们的基因型信息 map文件 包含遗传标记的信息（染色体号，snp号等等） 二进制格式的PLINK数据则包括三份文件 ：.bed文件，.fam文件 和 .bim文件 bed文件 含有 每个个体的识别符（ID） 和每个个体相对应的基因型 fam文件 含有 个体信息 （例如性别之类的） bim文件 含有 遗传标记的信息 （染色体号，snp号等等） PLIINK基础使用命令 plink --bfile MY_DATA --assoc --out gwas_results ‐‐file {your_file}输入文本格式文件 ‐‐bfile {your_file} 输入二进制格式文件 –assoc 关联分析,这一步会对每个SNP和研究者感兴趣的性状进行卡方检验 –out {outfile} 输出文件 样本质量控制 样本的质量控制包括：缺失率、杂合性、基因型性别和记录的性别是否一致。 检测缺失率(个体缺失)，一般将样本缺失率大于5%的个体去除 plink --bfile file --mind 0.05 --make-bed --out file_mind 检测杂合性 plink --bfile file --het --make-bed --out file_het 阈值设置：偏差可能表明样品污染，近亲繁殖。我们建议去除偏离样本的杂合率平均值±3 SD的个体 检测性别不一致的个体 – 受试者信息填写的性别和遗传性别不一致 plink --bfile file --check-sex --make-bed --out file_checksex 将上述筛选出来的不符合的样本去除 plink --bfile file --remove removesample.txt --make-bed --out file_qcsample ","date":"2023-08-05","objectID":"/gwas_turtorial/:3:1","tags":["数据处理","质量控制"],"title":"Gwas_turtorial","uri":"/gwas_turtorial/"},{"categories":["GWAS"],"content":"处理群体分层 ","date":"2023-08-05","objectID":"/gwas_turtorial/:4:0","tags":["数据处理","质量控制"],"title":"Gwas_turtorial","uri":"/gwas_turtorial/"},{"categories":["GWAS"],"content":"参考 一篇手把手教你做GWAS的Guideline文献解读 - 知乎 (zhihu.com) 全基因组关联分析学习资料（GWAS tutorial） - 知乎 (zhihu.com) easyGWAS - Running GWAS easily over the web (mpg.de) ","date":"2023-08-05","objectID":"/gwas_turtorial/:5:0","tags":["数据处理","质量控制"],"title":"Gwas_turtorial","uri":"/gwas_turtorial/"},{"categories":["GWAS"],"content":"2023-8-3新开一坑，开始学GWAS GWAS学习可以分为以下几个板块： GWAS的基本概念和原理：了解GWAS的目的、方法、优势和局限性，以及常用的统计模型和假设检验。 GWAS的数据处理和质量控制：学习如何对基因型数据进行格式转换、质量过滤、正负链翻转、基因型填补等操作，以及如何评估数据质量和避免潜在的偏差。 GWAS的关联分析和结果解读：学习如何使用不同的软件和工具进行关联分析，如何绘制曼哈顿图、QQ图等可视化结果，以及如何根据P值、置信区间、效应大小等指标判断关联性的显著性和强度。 GWAS的后续分析和功能注释：学习如何进行条件分析、Meta分析、基因多效性分析、孟德尔随机化分析等进一步探索关联信号的方法，以及如何利用数据库和工具进行SNP功能注释、基因集富集分析、组织特异性表达分析等方法，以揭示关联信号的生物学意义。 GWAS的文献阅读和案例学习：学习如何阅读和评价GWAS相关的文献，了解不同疾病或性状的GWAS发现和进展，以及如何应用GWAS结果进行风险评估、药物发现等应用。 GWA_tutorial：这是一个GitHub项目，提供了一个在Linux下学习GWAS实操数据的教程，包括四个部分：数据质量控制、群体分层校正、关联分析和多基因风险得分分析。 Genome-wide association studies in R：这是一个R博客文章，提供了一个用R语言分析GWAS的流程，包括数据质量控制、PCA分析、曼哈顿图、QQ图和候选位点功能分析。 ","date":"2023-08-02","objectID":"/gwas/:0:0","tags":["定义","初理解"],"title":"GWAS初体验","uri":"/gwas/"},{"categories":["GWAS"],"content":"GWAS基本概念 GWAS利用全基因组范围内的分子标记，如单核苷酸多态性（SNP），来探索与复杂性状或疾病相关的遗传变异 GWAS的目的是发现与表型变异有统计学关联的基因或基因区域，从而揭示生物学机制和潜在的治疗靶点 ","date":"2023-08-02","objectID":"/gwas/:1:0","tags":["定义","初理解"],"title":"GWAS初体验","uri":"/gwas/"},{"categories":["GWAS"],"content":"SNP 单核苷酸多态性 单核苷酸多态性（SNP）是指DNA序列中单个核苷酸的变异，它是生物遗传多样性的一种重要形式。SNP可以分布在基因的编码区或非编码区，影响基因的功能和表达。SNP也可以用于研究生物的起源、进化、迁移、疾病相关基因和药物反应等方面。 ","date":"2023-08-02","objectID":"/gwas/:2:0","tags":["定义","初理解"],"title":"GWAS初体验","uri":"/gwas/"},{"categories":["GWAS"],"content":"GWAS主要步骤 选择一个感兴趣的性状或疾病，以及一个适当的样本群体，如病例和对照组，或者具有连续性状值的个体。 对样本进行全基因组分型，即测定数百万个SNP位点的基因型。 对每个SNP位点进行关联分析，即计算其与性状或疾病的相关性强度和显著性水平，通常使用回归模型或卡方检验等统计方法。 根据设定的显著性阈值，筛选出具有显著关联信号的SNP位点，并绘制曼哈顿图（manhattan plot）来展示全基因组关联结果。 对显著关联信号进行进一步的验证和解释，如进行基因型插补（genotype imputation），精细定位（fine-mapping），功能注释（functional annotation），共定位分析（colocalization analysis）等，以确定最可能的因果变异和相关基因。 ","date":"2023-08-02","objectID":"/gwas/:3:0","tags":["定义","初理解"],"title":"GWAS初体验","uri":"/gwas/"},{"categories":["GWAS"],"content":"GWAS优势 可以在不依赖先验知识的情况下，全面地探索遗传变异与表型之间的关系，发现一些意想不到的新发现。此外，GWAS可以利用大规模的样本数据和高密度的分子标记，提高统计学效力和解析力 ","date":"2023-08-02","objectID":"/gwas/:4:0","tags":["定义","初理解"],"title":"GWAS初体验","uri":"/gwas/"},{"categories":["GWAS"],"content":"GWAS的局限性 GWAS通常只能解释表型变异中很小一部分的遗传力（heritability），这被称为“丢失的遗传力”（missing heritability）问题。这可能是由于一些罕见变异、结构变异、基因-基因相互作用、基因-环境相互作用等未被GWAS检测到的遗传因素所造成的。 GWAS通常只能发现与表型有关联而非因果关系的变异，这需要通过实验验证或其他方法来进一步证实。此外，GWAS也不能直接提供变异对表型影响的机制和途径，这需要结合其他功能基因组学数据和方法来进行解析。 ","date":"2023-08-02","objectID":"/gwas/:5:0","tags":["定义","初理解"],"title":"GWAS初体验","uri":"/gwas/"},{"categories":["GWAS"],"content":"参考 GWAS研究基本概念1 - 知乎 (zhihu.com) ","date":"2023-08-02","objectID":"/gwas/:6:0","tags":["定义","初理解"],"title":"GWAS初体验","uri":"/gwas/"},{"categories":["R"],"content":"运用代码 keywords \u003c- c(\"calcium\", \"calmodulin\") matched_indices \u003c- sapply(keywords, function(keyword){ str_detect(GO@result$Description, fixed(keyword, ignore_case = T)) }) matched_indices \u003c- apply(matched_indices, 1, any) matched_terms \u003c- GO@result[matched_indices,] ","date":"2023-07-30","objectID":"/23.7.30_r/:1:0","tags":["apply","“str_detect\""],"title":"23.7.30_R","uri":"/23.7.30_r/"},{"categories":["hugo_blog"],"content":"搭建博客记录 ","date":"2023-07-28","objectID":"/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/:0:0","tags":["hugo","github pages"],"title":"搭建博客","uri":"/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"},{"categories":["hugo_blog"],"content":"选择Hugo\u0026Githubpages的原因 Hugo是一个用Go语言编写的静态网站生成器，它可以快速地创建和发布博客文章。基础运用可以简单，只需要安装Hugo，选择一个主题，编写Markdown格式的文章，然后使用Hugo命令生成静态网站文件，不需要担心数据库、服务器等问题 GitHub Pages是一个静态站点托管服务，直接将个人、组织或项目的页面托管于GitHub库或仓库中。使用GitHub可以创建一个 \u003cusername\u003e.github.io的网站，不需要第一时间考虑域名以及备案等问题，后续有时间可以折腾–更改至自己的域名 GitHub workflow 可以自动更新Hugo 博客，这是一个很方便的功能。只需要将 Hugo 源码 push 到 GitHub 上，就可以触发 GitHub Actions 来生成和部署您的静态网站文件。您不需要在本地运行 Hugo 命令，也不需要手动上传文件到服务器 LoveIt主题个人比较喜欢，相对wordpress上大部分跟简洁，想要花哨也可以自定义魔改主题👴 ","date":"2023-07-28","objectID":"/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/:1:0","tags":["hugo","github pages"],"title":"搭建博客","uri":"/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"},{"categories":["hugo_blog"],"content":"基于Hugo\u0026Githubpages的博客搭建流程 ","date":"2023-07-28","objectID":"/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/:2:0","tags":["hugo","github pages"],"title":"搭建博客","uri":"/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"},{"categories":["hugo_blog"],"content":"基本流程 安装 Hugo。可以从[Hugo官网]下载适合您的操作系统的版本，建议下载entende版本（由于很多主题的一些特性需要将 SCSS 转换为 CSS, 推荐使用 Hugo extended版本来获得更好的使用体验 ） 可以使用 hugo version or hugo -h来检验是否安装成功 创建一个新的 Hugo 站点。可以使用 hugo new site path/to/site命令在指定的路径下创建一个空的站点框架 下载主题模板，我使用的是Git 模块方式添加主题到指定文件夹下 git submodule add https://github.com/griedzx/LoveIt.git themes/LoveIt 我将LoveIt模板文件fork到自己的仓库，并使用 git submodule（日后自己个性化模板，可以一键同步更新） 相应设置 config.toml，指定主题、网址，可以参考对应主题中的toml文件 hugo new posts/\u003cxxx\u003e.md创建markdown文件作文博文 hugo serve -D 启动 Hugo server 并使用 drafts 模式，在本地运行一个 web 服务器来预览网站效果，并且可以看到草稿文件的预览 使用GitHub可以创建一个 \u003cusername\u003e.github.io的仓库，将 hugo后产生的 ./public（里面存放的是可部署的静态网站文件）push至对应repo 7.1 GitHub workflow 可以自动更新您的 Hugo 博客，这是一个很方便的功能。只需要将您Hugo 源码 push 到 GitHub 上（可以是另一个repo，也可以是上述repo另一个分支），就可以触发 GitHub Actions 来自动生成和部署的静态网站文件 如果想了解更多关于 GitHub workflow 的信息，您可以参考Host on Github Pages | Hugo ","date":"2023-07-28","objectID":"/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/:2:1","tags":["hugo","github pages"],"title":"搭建博客","uri":"/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"},{"categories":["hugo_blog"],"content":"设置的tips 文件头扉页 front matter title: \"搭建博客\" date: 2023-07-28T21:57:35+08:00 draft: false hugo一个新md文件一般只会出现前三行设置参数，但是Hugo 将内容分成草稿 Draft，将来发布 Future 和过期 Expired 等类型，可以在文件头扉页 front matter 中设置相应状态。 future 设置 publishdate 值 draft 设置 true 或者 false past 设置 expirydate 值 如 demo.md 文件头扉页 front matter 中设置： --- title: Base Templates and Blocks linktitle: description: The base and block constructs ... godocref: https://golang.org/pkg/text/template/#example_Template_block date: 2017-02-01 publishdate: 2017-02-01 lastmod: 2017-02-01 categories: [templates,fundamentals] keywords: [blocks,base] menu: docs: parent: \"templates\" weight: 20 weight: 20 sections_weight: 20 draft: false aliases: [/templates/blocks/,/templates/base-templates-and-blocks/] toc: true --- 多语言模式 [language]下设置多种参数，具体见多语言模式 |雨 果 (gohugo.io) 对于每个新页面, 将语言代码附加到文件名中. 单个文件 my-page.md 需要分为三个文件: 英语: my-page.en.md 中文: my-page.zh-cn.md 法语: my-page.fr.md emoji展示 win10输入法里面 徽标 + 句号（.）可以使用自带的表情符号，可以个性化设置 🐱‍🏍 好玩 以上完成初步hugo网站的搭建，还有很多设置可以学习。hugo官方的汉化版使用文档很简略，大部分网上找到的翻译文档大多直译看完后还是摸不着头脑，在简书上发现Hugo 不完美教程 这一系列教程，使用文档和作者实战经验相结合，对我有很大帮助，我将借助此继续完善我的网站 参考 Hugo 不完美教程 - I: Hugo Web Framework - 简书 (jianshu.com) Hugo框架中文文档 标签分类 - Andbible ","date":"2023-07-28","objectID":"/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/:2:2","tags":["hugo","github pages"],"title":"搭建博客","uri":"/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"},{"categories":["GO\u0026KEGG富集分析"],"content":"问题描述 做GO富集分析时，师姐给的数据是Genome assembly B73 RefGen_v4版本的数据 对应基因id没有需要使用的symbol或者entrez_id形式 并且大多数在线GO分析网站和id转换网站不支持v4版本基因id与symbol或者entrez_id相互转换 Genome assembly B73 RefGen_v4 Genome assembly B73 RefGen_v4是玉米的第四版参考基因组序列，它是由美国农业部农业研究局（USDA-ARS）和美国能源部联合基因组研究所（DOE-JGI）的科学家合作完成的。它是目前最完整、最准确的玉米基因组序列，它包含了21条染色体的端粒到端粒的连续序列，共有2.06亿个碱基对，覆盖了99.8%的可编码区域，注释了39,656个基因。 ","date":"2023-07-18","objectID":"/maize_gene_id%E8%BD%AC%E6%8D%A2/:1:0","tags":["maize_gene_id"],"title":"maize_gene_id转换","uri":"/maize_gene_id%E8%BD%AC%E6%8D%A2/"},{"categories":["GO\u0026KEGG富集分析"],"content":"解决方法 ","date":"2023-07-18","objectID":"/maize_gene_id%E8%BD%AC%E6%8D%A2/:2:0","tags":["maize_gene_id"],"title":"maize_gene_id转换","uri":"/maize_gene_id%E8%BD%AC%E6%8D%A2/"},{"categories":["GO\u0026KEGG富集分析"],"content":"网页在线转换 MaizeGDB gene Search Page MaizeGDB数据库有一个Translate Gene Model IDs工具，可以识别各种类型的玉米的gene_id，并转换为比较常用的几种id(如) ","date":"2023-07-18","objectID":"/maize_gene_id%E8%BD%AC%E6%8D%A2/:2:1","tags":["maize_gene_id"],"title":"maize_gene_id转换","uri":"/maize_gene_id%E8%BD%AC%E6%8D%A2/"},{"categories":["GO\u0026KEGG富集分析"],"content":"爬虫技术解决 R语言爬取NCBI大豆基因Locus tag数据 - 简书 (jianshu.com) 生信笔记01：Locus tag转换为Entrez Gene ID - 简书 (jianshu.com) 通过 ","date":"2023-07-18","objectID":"/maize_gene_id%E8%BD%AC%E6%8D%A2/:2:2","tags":["maize_gene_id"],"title":"maize_gene_id转换","uri":"/maize_gene_id%E8%BD%AC%E6%8D%A2/"},{"categories":["GO\u0026KEGG富集分析"],"content":"AnnotationHub构建OrgDb 要进行GO或者KEGG富集分析，就需要知道每个基因对应什么样的GO/KEGG分类，OrgDb就是存储不同数据库基因ID之间对应关系，以及基因与GO等注释的对应关系的 R 软件包 如果自己研究的物种不在 http://bioconductor.org/packages/release/BiocViews.html#___OrgDb 之列，很大可能就需要自己构建OrgDb，然后用clusterProfiler分析 ","date":"2023-07-17","objectID":"/annotationhub%E6%9E%84%E5%BB%BAorgdb/:0:0","tags":["AnnotationHub","OrgDb"],"title":"Annotationhub构建orgdb","uri":"/annotationhub%E6%9E%84%E5%BB%BAorgdb/"},{"categories":["GO\u0026KEGG富集分析"],"content":"利用AnnotationHub得到org.db 其中一种情况是在（AnnotationHub）中存在对应的注释包 require(AnnotationHub) hub \u003c- AnnotationHub()#下载失败多试几次 query(hub,\"zea mays\") AnnotationHub with 8 records # snapshotDate(): 2023-04-24 # $dataprovider: NCBI,DBCLS, ftp://ftp.ncbi.nlm.nih.gov/gene/DATA/, WikiPathways # $species: Zea mays, Zea mays_var._japonica # $rdataclass: SQLiteFile, OrgDb, Tibble # additional mcols(): taxonomyid, genome, description, coordinate_1_based, maintainer, rdatadateadded, preparerclass, tags, # rdatapath, sourceurl, sourcetype # retrieve records with, e.g., 'object[[\"AH91642\"]]' title AH91642 | MeSHDb for Zea mays (Corn, v001) AH91817 | wikipathways_Zea_mays_metabolites.rda AH97909 | MeSHDb for Zea mays (Corn, v002) AH100374 | MeSHDb for Zea mays (Corn, v003) AH107139 | MeSHDb for Zea mays (Corn, v004) AH111528 | MeSHDb for Zea mays (Corn, v005) AH111691 | org.Zea_mays.eg.sqlite AH111692 | org.Zea_mays_var._japonica.eg.sqlite 阅读命令输出信息，可以看到 数据库来源不同，选择需要的（org）以及确定物种（zea_mays） retrieve records with, e.g., 'object[[\"AH111691\"]]' 检索下载db用指定格式 ","date":"2023-07-17","objectID":"/annotationhub%E6%9E%84%E5%BB%BAorgdb/:1:0","tags":["AnnotationHub","OrgDb"],"title":"Annotationhub构建orgdb","uri":"/annotationhub%E6%9E%84%E5%BB%BAorgdb/"},{"categories":["GO\u0026KEGG富集分析"],"content":"GO_KEGG富集分析 ","date":"2023-07-16","objectID":"/go_kegg%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/:0:0","tags":null,"title":"Go_kegg富集分析","uri":"/go_kegg%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/"},{"categories":["GO\u0026KEGG富集分析"],"content":"富集分析 富集分析（ Enrichment Analysis），是一种识别基因集合与已知生物过程、细胞组分和通路之间关联的统计方法。这些工具通过使用数据库中的注释信息来找到对应的基因集合。 ","date":"2023-07-16","objectID":"/go_kegg%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/:1:0","tags":null,"title":"Go_kegg富集分析","uri":"/go_kegg%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/"},{"categories":["GO\u0026KEGG富集分析"],"content":"富集分析的效果、目的 把差异基因或者物质根据其功能进行归类，使具有相似功能的基因或者物质就被放在一起 实现功能和表型相关联 解读一组基因背后所代表的生物学知识，揭示其在细胞内或细胞外扮演了什么样的角色。 ","date":"2023-07-16","objectID":"/go_kegg%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/:1:1","tags":null,"title":"Go_kegg富集分析","uri":"/go_kegg%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/"},{"categories":["GO\u0026KEGG富集分析"],"content":"富集分析的原理 富集分析通常是分析一组基因在某个功能节点上是否相比于随机水平过于出现(over-presentation) ","date":"2023-07-16","objectID":"/go_kegg%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/:1:2","tags":null,"title":"Go_kegg富集分析","uri":"/go_kegg%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/"},{"categories":["GO\u0026KEGG富集分析"],"content":"常用方法 目前最常用的方法是基于GO和KEGG的富集分析。 首先通过多种方法得到大量的感兴趣的基因，例如差异表达基因集、共表达基因模块、蛋白质复合物基因簇等，然后寻找这些感兴趣基因集显著富集的GO节点或者KEGG通路，这有助于进一步深入细致的实验研究。 依据富集分析过程中基因选择、注释数据库的不同，常用的富集分析可以分为以下四种类型：GO term功能富集、KEGG pathway通路富集、MSigDB基因集富集和单基因富集等等 ","date":"2023-07-16","objectID":"/go_kegg%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/:1:3","tags":null,"title":"Go_kegg富集分析","uri":"/go_kegg%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/"},{"categories":["GO\u0026KEGG富集分析"],"content":"GO \u0026 KEGG是什么 对于每个基因而言，其基本的功能基于他们的蛋白结构域以及研究的文献已经可以大致的知道一个基因具有什么样子的功能了。GO和KEGG就是基于不同的分类思想而储存的基因相关功能的数据库。 ","date":"2023-07-16","objectID":"/go_kegg%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/:2:0","tags":null,"title":"Go_kegg富集分析","uri":"/go_kegg%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/"},{"categories":["GO\u0026KEGG富集分析"],"content":"GO数据库 全称是Gene Ontology(基因本体)，他们把基因的功能分成了三个部分分别是： 细胞组分（cellular component, CC）、分子功能（molecular function, MF） 、 生物过程（biological process, BP） 。利用GO数据库，我们就可以得到我们的目标基因在CC, MF和BP三个层面上，主要和什么有关。 ","date":"2023-07-16","objectID":"/go_kegg%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/:2:1","tags":null,"title":"Go_kegg富集分析","uri":"/go_kegg%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/"},{"categories":["GO\u0026KEGG富集分析"],"content":"KEGG数据库 除了对基因本身功能的注释，我们也知道基因会参与人体的各个通路，基于人体通路而形成的数据库就是通路相关的数据库。 京都基因与基因组百科全书（Kyoto encyclopedia of genes and genomes, KEGG）是系统分析基因功能、基因组信息的数据库，整合了基因组学、生物化学及系统功能组学的信息，有助于研究者把基因及表达信息作为一个整体进行研究。目前KEGG共包含了19个子数据库，富集分析常用在KEGG Pathway通路中。 ","date":"2023-07-16","objectID":"/go_kegg%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/:2:2","tags":null,"title":"Go_kegg富集分析","uri":"/go_kegg%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/"},{"categories":["GO\u0026KEGG富集分析"],"content":"GO_KEGG_GSEA分析 ","date":"2023-07-16","objectID":"/go_kegg%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/:3:0","tags":null,"title":"Go_kegg富集分析","uri":"/go_kegg%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/"},{"categories":["GO\u0026KEGG富集分析"],"content":"下载加载需要的包 下载 install.packages(\"包名称\") 或者 biocManager::install(\"包名称\") BiocManager：是一个 R 包，其中包含了一些用于管理 Bioconductor 包的函数，如 install()、update() 等。使用 :: 表示法，你可以指定调用特定包中的函数。通过 BiocManager，你可以轻松地访问和管理 Bioconductor 存储库中的生物信息学和生物统计学相关的软件包。它简化了安装和维护 Bioconductor 包的过程。 Bioconductor：是一个专门用于生物信息学和生物统计学研究的 R 软件包存储库。它是一个巨大的代码资源库，包含了许多用于基因表达数据分析、基因组学、蛋白质组学等生物学领域的软件包。Bioconductor 提供了丰富的分析工具和算法，能够帮助生物学家处理和解释生物学数据。BiocManager 用于访问和安装 Bioconductor 中的软件包。 :: 不仅可以用于指定调用的包，还可以在不加载整个包的情况下调用该包中的函数。这样可以在特定代码行中临时使用特定包中的函数，而不需要在整个会话中加载该包。:: 只在当前代码行中生效 加载 library(clusterProfiler)#GO\u0026KEGG library(enrichplot)#GO\u0026KEGG library(ggplot2)#柱状图和点状图 library(stringr)#基因ID转换 library(GOplot)#弦图，弦表图，系统聚类图 library(DOSE) library(ggnewscale) library(topGO)#绘制通路网络图 library(circlize)#绘制富集分析圈图 library(ComplexHeatmap)#绘制图例 library(forcats)#绘图中对因子处理 ","date":"2023-07-16","objectID":"/go_kegg%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/:3:1","tags":null,"title":"Go_kegg富集分析","uri":"/go_kegg%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/"},{"categories":["GO\u0026KEGG富集分析"],"content":"读取数据，将基因ID从GENE_SYMBOL转换为ENTREZ_ID #载入数据，只需要基因ID(GO,KEGG,GSEA需要)和log2FOldChange(GSEA(基因集富集分析)需要) data \u003c- read.csv(\"DEG.csv\",header = T) #指定富集分析的物种库 GO_database \u003c- 'org.Hs.eg.db' #GO分析指定物种 KEGG_database \u003c- 'hsa' #KEGG分析指定物种 GO分析指定物种，详见 GO物种缩写索引表 KEGG分析指定物种，详见 keggle物种缩写索引表 #安装注释数据库 if (!require(\"BiocManager\", quietly = TRUE)) install.packages(\"BiocManager\") BiocManager::install(\"org.Hs.eg.db\") 有问题参见官网 Bioconductor - org.Hs.eg.db OrgDb org数据库是一个用于存储特定物种的基因和基因注释信息的数据库。每个org数据库专门用于一个特定的生物物种，例如人类、小鼠、大鼠等。org数据库包含了与该物种相关的基因、基因产物以及它们的注释信息，如基因的功能、组织表达、基因本体注释等。在生物学研究中，研究人员经常需要将基因与GO术语相关联，从而了解基因的功能和参与的生物过程。为此，他们需要使用org数据库中的基因注释信息，将基因与GO术语进行映射，以便进行GO富集分析、基因集对比等功能。 在 http://bioconductor.org/packages/release/BiocViews.html#___OrgDb可以找到对应物种 #gene ID转换 gene \u003c- bitr(data$gene,fromType = 'SYMBOL', toType = 'ENTREZID',OrgDb = GO_database) 如果自己研究的物种不在 http://bioconductor.org/packages/release/BiocViews.html#___OrgDb 之列，很大可能就需要自己构建OrgDb，然后用clusterProfiler分析。非模式生物要想找到自己的注释包，又分成两类： 一类是在 AnnotationHub 中存在的，例如玉米 另一类是在AnnotationHub也不存在相应物种，就需要用 AnnotationForge 来自己构建 若出现 \u003e gene \u003c- bitr(data$gene,fromType = 'SYMBOL', toType = 'ENTREZID',OrgDb = GO_database) 'select()' returned 1:many mapping between keys and columns Warning message: In bitr(data$gene, fromType = \"SYMBOL\", toType = \"ENTREZID\", OrgDb = GO_database) : 0.7% of input gene IDs are fail to map... 一对多映射：某些基因 ID（SYMBOL）可能对应多个基因 ID（ENTREZID）。这种情况通常是因为一个基因可能有多个变体或不同的数据库中存在多个记录。 ","date":"2023-07-16","objectID":"/go_kegg%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/:3:2","tags":null,"title":"Go_kegg富集分析","uri":"/go_kegg%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/"},{"categories":["GO\u0026KEGG富集分析"],"content":"GO分析 #GO分析 GO \u003c- enrichGO(gene$ENTREZID, OrgDb = GO_database, keyType = \"ENTREZID\",#设定读取的gene ID类型 ont = 'ALL', #ont=all即包括GO数据库中的三个部分CC、MF、BP pvalueCutoff = 0.05, qvalueCutoff = 0.05, readable = T) readable 参数用于控制 GO 富集分析结果中的基因 ID 是否转换成易读的描述性名称,即ENTREZ_ID -\u003e SYMBOL_ID,默认为 False ","date":"2023-07-16","objectID":"/go_kegg%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/:3:3","tags":null,"title":"Go_kegg富集分析","uri":"/go_kegg%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/"},{"categories":["GO\u0026KEGG富集分析"],"content":"KEGG分析 （参数和GO差不多） KEGG \u003c- enrichKEGG(gene$ENTREZID,#KEGG富集分析 organism = KEGG_database, pvalueCutoff = 0.05, qvalueCutoff = 0.05) GO \u0026 KEGG 都可以保存为csv文件查看 write.csv(GO,\"./result.csv\") GO_result \u003c- GO@result 所得变量存储格式和输出文件格式相同，可以查看选择感兴趣的定制画图 ","date":"2023-07-16","objectID":"/go_kegg%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/:3:4","tags":null,"title":"Go_kegg富集分析","uri":"/go_kegg%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/"},{"categories":["GO\u0026KEGG富集分析"],"content":"GO \u0026 KEGG结果可视化 ","date":"2023-07-16","objectID":"/go_kegg%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/:4:0","tags":null,"title":"Go_kegg富集分析","uri":"/go_kegg%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/"},{"categories":["GO\u0026KEGG富集分析"],"content":"富集柱状图 + 点状图 barplot(GO, split = \"ONTOLOGY\") + facet_grid(ONTOLOGY~., scale = \"free\") + scale_y_discrete(labels=function(x) str_wrap(x, width = 100)) dotplot(GO, split = \"ONTOLOGY\") + facet_grid(ONTOLOGY~., scale = \"free\") barplot() 函数用于创建柱状图 参数 split = \"ONTOLOGY\" 表示按照 “ONTOLOGY” 列的不同取值（GO_db的三个层面）将数据拆分为不同的柱状图 facet_grid() 函数用于将拆分后的柱状图按照 “ONTOLOGY” 列的不同取值排列在一个网格中。每一行代表一个 “ONTOLOGY” 类别 子图根据数据的分布自动调整高度，即参数 scale = \"free\"，以便更好地展示数据的差异 barplot(GO, showCategory=20) 参数 showCategory 可以控制展示的数量 scale_y_discrete(labels=function(x) str_wrap(x, width = 100)) #调整y轴标签长度，使其放在一行 ","date":"2023-07-16","objectID":"/go_kegg%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/:4:1","tags":null,"title":"Go_kegg富集分析","uri":"/go_kegg%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/"},{"categories":["GO\u0026KEGG富集分析"],"content":"棒棒糖图 ggplot(GO, showCategory = 20, aes(GeneRatio, fct_reorder(Description, GeneRatio))) + geom_segment(aes(xend=0, yend = Description)) + geom_point(aes(color=p.adjust, size = Count)) + scale_color_viridis_c(guide=guide_colorbar(reverse=TRUE)) + scale_size_continuous(range=c(2, 10)) + theme_minimal() + ylab(NULL) aes(GeneRatio, fct_reorder(Description, GeneRatio)): 这里设置了图形的\"美学映射\"（aesthetic mappings） GeneRatio 是x轴的变量，fct_reorder(Description, GeneRatio) 是y轴的变量 fct_reorder() 函数可以根据 GeneRatio 的值对 Description 进行重新排序，这样可以根据 GeneRatio 的大小对y轴的标签进行排列。 ","date":"2023-07-16","objectID":"/go_kegg%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/:4:2","tags":null,"title":"Go_kegg富集分析","uri":"/go_kegg%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/"},{"categories":["GO\u0026KEGG富集分析"],"content":"富集基因与所在功能集/通路集的关联网络图 enrichplot::cnetplot(GO, circular = F, colorEdge = T) circluar为指定是否环化，基因过多建议设置成 F ","date":"2023-07-16","objectID":"/go_kegg%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/:4:3","tags":null,"title":"Go_kegg富集分析","uri":"/go_kegg%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/"},{"categories":["GO\u0026KEGG富集分析"],"content":"富集到的功能集/通路集之间的关联网络图 GO2 \u003c- pairwise_termsim(GO) enrichplot::emapplot(GO2,showCategory = 50, color = \"p.adjust\", layout = \"kk\")#通路间关联网络图 热图展现关联关系 enrichplot::heatplot(GO,showCategory = 50)#基因-通路关联热图 enrichplot::heatplot(KEGG,showCategory = 50) ","date":"2023-07-16","objectID":"/go_kegg%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/:4:4","tags":null,"title":"Go_kegg富集分析","uri":"/go_kegg%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/"},{"categories":["GO\u0026KEGG富集分析"],"content":"GO富集功能网络图 GO_BP\u003c-enrichGO( gene$ENTREZID,#GO富集分析BP模块 OrgDb = GO_database, keyType = \"ENTREZID\", ont = \"BP\", pvalueCutoff = 0.05, pAdjustMethod = \"BH\", qvalueCutoff = 0.05, minGSSize = 10, maxGSSize = 500, readable = T) plotGOgraph(GO_BP)#GO-BP功能网络图 GO_CC\u003c-enrichGO( gene$ENTREZID,#GO富集分析CC模块 OrgDb = GO_database, keyType = \"ENTREZID\", ont = \"CC\", pvalueCutoff = 0.05, pAdjustMethod = \"BH\", qvalueCutoff = 0.05, minGSSize = 10, maxGSSize = 500, readable = T) plotGOgraph(GO_CC)#GO-CC功能网络图 GO_MF\u003c-enrichGO( gene$ENTREZID,#GO富集分析MF模块 OrgDb = GO_database, keyType = \"ENTREZID\", ont = \"MF\", pvalueCutoff = 0.05, pAdjustMethod = \"BH\", qvalueCutoff = 0.05, minGSSize = 10, maxGSSize = 500, readable = T) plotGOgraph(GO_MF)#GO-MF功能网络图 ","date":"2023-07-16","objectID":"/go_kegg%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/:4:5","tags":null,"title":"Go_kegg富集分析","uri":"/go_kegg%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/"},{"categories":["GO\u0026KEGG富集分析"],"content":"GO富集弦图 先要将所有GO富集到的基因集所对应的类型写入本地文件从而得到BP/CC/MF各自的起始位置如我的数据里是1，2103，2410. genedata\u003c-data.frame(ID=info$gene_symbol,logFC=info$log2FoldChange) write.table(GO$ONTOLOGY, file = \"/Users/ZYP/Downloads/KEGG_GO/GO_ONTOLOGYs.txt\", #将所有GO富集到的基因集所对应的类型写入本地文件从而得到BP/CC/MF各自的起始位置如我的数据里是1，2103，2410 append = FALSE, quote = TRUE, sep = \" \", eol = \"\\n\", na = \"NA\", dec = \".\", row.names = TRUE, col.names = TRUE, qmethod = c(\"escape\", \"double\"), fileEncoding = \"\") GOplotIn_BP\u003c-GO[1:10,c(2,3,7,9)] #提取GO富集BP的前10行,提取ID,Description,p.adjust,GeneID四列 GOplotIn_CC\u003c-GO[2103:2112,c(2,3,7,9)]#提取GO富集CC的前10行,提取ID,Description,p.adjust,GeneID四列 GOplotIn_MF\u003c-GO[2410:2419,c(2,3,7,9)]#提取GO富集MF的前10行,提取ID,Description,p.adjust,GeneID四列 GOplotIn_BP$geneID \u003c-str_replace_all(GOplotIn_BP$geneID,'/',',') #把GeneID列中的’/’替换成‘,’ GOplotIn_CC$geneID \u003c-str_replace_all(GOplotIn_CC$geneID,'/',',') GOplotIn_MF$geneID \u003c-str_replace_all(GOplotIn_MF$geneID,'/',',') names(GOplotIn_BP)\u003c-c('ID','Term','adj_pval','Genes')#修改列名,后面弦图绘制的时候需要这样的格式 names(GOplotIn_CC)\u003c-c('ID','Term','adj_pval','Genes') names(GOplotIn_MF)\u003c-c('ID','Term','adj_pval','Genes') GOplotIn_BP$Category = \"BP\"#分类信息 GOplotIn_CC$Category = \"CC\" GOplotIn_MF$Category = \"MF\" circ_BP\u003c-GOplot::circle_dat(GOplotIn_BP,genedata) #GOplot导入数据格式整理 circ_CC\u003c-GOplot::circle_dat(GOplotIn_CC,genedata) circ_MF\u003c-GOplot::circle_dat(GOplotIn_MF,genedata) chord_BP\u003c-chord_dat(data = circ_BP,genes = genedata) #生成含有选定基因的数据框 chord_CC\u003c-chord_dat(data = circ_CC,genes = genedata) chord_MF\u003c-chord_dat(data = circ_MF,genes = genedata) GOChord(data = chord_BP,#弦图 title = 'GO-Biological Process',space = 0.01,#GO Term间距 limit = c(1,1),gene.order = 'logFC',gene.space = 0.25,gene.size = 5, lfc.col = c('red','white','blue'), #上下调基因颜色 process.label = 10) #GO Term字体大小 GOChord(data = chord_CC,title = 'GO-Cellular Component',space = 0.01, limit = c(1,1),gene.order = 'logFC',gene.space = 0.25,gene.size = 5, lfc.col = c('red','white','blue'), process.label = 10) GOChord(data = chord_MF,title = 'GO-Mollecular Function',space = 0.01, limit = c(1,1),gene.order = 'logFC',gene.space = 0.25,gene.size = 5, lfc.col = c('red','white','blue'), process.label = 10) ","date":"2023-07-16","objectID":"/go_kegg%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/:4:6","tags":null,"title":"Go_kegg富集分析","uri":"/go_kegg%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/"},{"categories":["GO\u0026KEGG富集分析"],"content":"参考文章 GO分析和KEGG分析都是啥？ - 知乎 (zhihu.com) 最全的GO, KEGG, GSEA分析教程(R),你要的高端可视化都在这啦！[包含富集圈图] - 知乎 (zhihu.com) ","date":"2023-07-16","objectID":"/go_kegg%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/:5:0","tags":null,"title":"Go_kegg富集分析","uri":"/go_kegg%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/"},{"categories":null,"content":"自我简介 大家好，我是griedzx，一名大概率喜欢生物信息学的学生，对于生物学和计算机科学的结合产生了浓厚的兴趣，我希望通过写博客来分享我在生物信息学领域的学习心得和经验。 ","date":"2023-06-17","objectID":"/about/first_post/:1:0","tags":["about me"],"title":"About","uri":"/about/first_post/"},{"categories":null,"content":"学习和技能 生物学基础：我在生物学领域有扎实的基础知识，包括分子生物学、遗传学和生物信息学的基本概念。 编程语言：我熟悉Python编程语言，并且在生物信息学领域中有丰富的编程实践经验。 生物信息学工具：我熟悉常用的生物信息学工具和软件，如BLAST、Bowtie、Samtools等，可以进行基本的序列分析和基因组学研究。 数据分析：我了解常见的数据分析方法和统计学原理，并能够使用相关的工具和库进行生物信息数据的处理和分析。 ","date":"2023-06-17","objectID":"/about/first_post/:2:0","tags":["about me"],"title":"About","uri":"/about/first_post/"},{"categories":null,"content":"目标 作为一名生物信息专业的学生，我希望在未来能够做出以下贡献： 深入学习和理解生物信息学的前沿技术和方法，如基因组学、转录组学和蛋白质组学等。 运用生物信息学工具和技术解决生物学研究中的实际问题，例如寻找基因突变、预测蛋白质结构等。 参与生物信息学项目，与团队合作并交流学习，推动生物信息学在生命科学研究中的应用。 继续学习和探索相关的计算机科学知识和技术，如机器学习和人工智能在生物信息学中的应用。 ","date":"2023-06-17","objectID":"/about/first_post/:3:0","tags":["about me"],"title":"About","uri":"/about/first_post/"},{"categories":null,"content":"博客主题 我将在我的博客上分享以下主题： 生物信息学入门指南和基础知识解析。 常用生物信息学工具和软件的介绍和使用技巧。 生物信息学研究方法和数据分析技术的分享。 前沿的生物信息学应用和研究进展的介绍和评论。 生物信息学与其他学科交叉的领域探索，如计算系统生物学和药物设计等。 如果你对以上任何主题感兴趣，欢迎订阅我的博客或在文章下方留言交流。 希望通过我的博客，能够帮助更多的人了解和应用生物信息学，推动生命科学研究的发展。非常感谢你阅读我的第一篇博客文章，期待在未来与你的交流和分享！ ","date":"2023-06-17","objectID":"/about/first_post/:4:0","tags":["about me"],"title":"About","uri":"/about/first_post/"}]